# -*- coding: utf-8 -*-
"""asl_test.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1urengOEcHq6jdg-tbTRTUZw3zROl1hFa
"""

#Connect to drive
from google.colab import drive
drive.mount('/content/drive')

#unzip the dataset
import zipfile
import os

zip_path = "/content/drive/MyDrive/asl/dataset.zip"
extract_path = "/content/dataset"

with zipfile.ZipFile(zip_path, "r") as zip_ref:
    zip_ref.extractall(extract_path)

print("Dataset extracted successfully!")

#Imports
import os
import numpy as np
import tensorflow as tf
from tensorflow.keras.preprocessing import image
from tensorflow.keras.models import load_model

#Test the model
model_path = "/content/drive/MyDrive/asl/final_model_30.h5"
model = load_model(model_path)

test_dir = "/content/dataset/dataset/asl_alphabet_test/asl_alphabet_test"

class_labels = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'del', 'nothing', 'space','0','1','2','3','4','5','6','7','8','9']

def predict_image(img_path):
    img = image.load_img(img_path, target_size=(224, 224))
    img_array = image.img_to_array(img)
    img_array = np.expand_dims(img_array, axis=0)

    prediction = model.predict(img_array)
    predicted_index = np.argmax(prediction)
    predicted_character = class_labels[predicted_index]

    print(f"Predicted ASL Character: {predicted_character}")

for img_name in os.listdir(test_dir):
    if not img_name.lower().endswith(('.png', '.jpg', '.jpeg')):
        print(f"Skipping: {img_name}")
        continue
    img_path = os.path.join(test_dir, img_name)
    print(f"Testing Image: {img_name}")
    predict_image(img_path)
    print("-" * 50)